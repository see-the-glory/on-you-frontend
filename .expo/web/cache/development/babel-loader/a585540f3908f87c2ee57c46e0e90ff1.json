{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport AppLoading from 'expo-app-loading';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Tabs from \"./navigation/Tabs\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport LoginStack from \"./navigation/LoginStack\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar loadFonts = function loadFonts(fonts) {\n  return fonts.map(function (font) {\n    return Font.loadAsync(font);\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      setReady = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoggedIn = _useState4[0],\n      setIsLoggedIn = _useState4[1];\n\n  var onFinish = function onFinish() {\n    return setReady(true);\n  };\n\n  var NativeStack = createNativeStackNavigator();\n\n  var startLoading = function startLoading() {\n    var fonts;\n    return _regeneratorRuntime.async(function startLoading$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fonts = loadFonts([Ionicons.font]);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Promise.all(fonts));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!ready) {\n    return _jsx(AppLoading, {\n      startAsync: startLoading,\n      onFinish: onFinish,\n      onError: console.error\n    });\n  }\n\n  return _jsx(NavigationContainer, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: isLoggedIn ? _jsx(Tabs, {}) : _jsx(LoginStack, {})\n  });\n}","map":{"version":3,"sources":["/Users/mymac/Desktop/Coding/on_you/frontend/on-you-frontend/App.js"],"names":["React","useEffect","useState","Font","Ionicons","AppLoading","NavigationContainer","Tabs","LoginStack","createNativeStackNavigator","loadFonts","fonts","map","font","loadAsync","App","ready","setReady","isLoggedIn","setIsLoggedIn","onFinish","NativeStack","startLoading","Promise","all","console","error","headerShown"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,IAAP;;AAEA,OAAOC,UAAP;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,WAAUV,IAAI,CAACW,SAAL,CAAeD,IAAf,CAAV;AAAA,GAAV,CAAX;AAAA,CAAlB;;AAEA,eAAe,SAASE,GAAT,GAAe;AAC5B,kBAA0Bb,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAoCf,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAOgB,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMH,QAAQ,CAAC,IAAD,CAAd;AAAA,GAAjB;;AACA,MAAMI,WAAW,GAAGZ,0BAA0B,EAA9C;;AAEA,MAAMa,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACbX,YAAAA,KADa,GACLD,SAAS,CAAC,CAACN,QAAQ,CAACS,IAAV,CAAD,CADJ;AAAA;AAAA,6CAEbU,OAAO,CAACC,GAAR,CAAYb,KAAZ,CAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAKA,MAAI,CAACK,KAAL,EAAY;AACV,WACI,KAAC,UAAD;AACI,MAAA,UAAU,EAAEM,YADhB;AAEI,MAAA,QAAQ,EAAEF,QAFd;AAGI,MAAA,OAAO,EAAEK,OAAO,CAACC;AAHrB,MADJ;AAOD;;AAED,SACI,KAAC,mBAAD;AAAqB,IAAA,aAAa,EAAE;AAACC,MAAAA,WAAW,EAAE;AAAd,KAApC;AAAA,cACGT,UAAU,GAAG,KAAC,IAAD,KAAH,GAAc,KAAC,UAAD;AAD3B,IADJ;AAKD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport AppLoading from 'expo-app-loading';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Tabs from './navigation/Tabs';\nimport { Text } from 'react-native';\nimport LoginStack from './navigation/LoginStack';\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\n\nconst loadFonts = (fonts) => fonts.map((font) => Font.loadAsync(font));\n\nexport default function App() {\n  const [ready, setReady] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n\n  const onFinish = () => setReady(true);\n  const NativeStack = createNativeStackNavigator();\n  // PreLoading\n  const startLoading = async () => {\n    const fonts = loadFonts([Ionicons.font]);\n    await Promise.all(fonts);\n  };\n\n  if (!ready) {\n    return (\n        <AppLoading\n            startAsync={startLoading}\n            onFinish={onFinish}\n            onError={console.error}\n        />\n    );\n  }\n\n  return (\n      <NavigationContainer screenOptions={{headerShown: false}}>\n        {isLoggedIn ? <Tabs /> : <LoginStack />}\n      </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}